// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: indiemotion-proto/messages/motion_mode.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_indiemotion_2dproto_2fmessages_2fmotion_5fmode_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_indiemotion_2dproto_2fmessages_2fmotion_5fmode_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_indiemotion_2dproto_2fmessages_2fmotion_5fmode_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_indiemotion_2dproto_2fmessages_2fmotion_5fmode_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_indiemotion_2dproto_2fmessages_2fmotion_5fmode_2eproto;
namespace indiemotion {
namespace messages {
class MotionGetMode;
struct MotionGetModeDefaultTypeInternal;
extern MotionGetModeDefaultTypeInternal _MotionGetMode_default_instance_;
class MotionSetMode;
struct MotionSetModeDefaultTypeInternal;
extern MotionSetModeDefaultTypeInternal _MotionSetMode_default_instance_;
}  // namespace messages
}  // namespace indiemotion
PROTOBUF_NAMESPACE_OPEN
template<> ::indiemotion::messages::MotionGetMode* Arena::CreateMaybeMessage<::indiemotion::messages::MotionGetMode>(Arena*);
template<> ::indiemotion::messages::MotionSetMode* Arena::CreateMaybeMessage<::indiemotion::messages::MotionSetMode>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace indiemotion {
namespace messages {

enum MotionSetMode_Mode : int {
  MotionSetMode_Mode_Off = 0,
  MotionSetMode_Mode_Live = 1,
  MotionSetMode_Mode_Recording = 2,
  MotionSetMode_Mode_MotionSetMode_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MotionSetMode_Mode_MotionSetMode_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MotionSetMode_Mode_IsValid(int value);
constexpr MotionSetMode_Mode MotionSetMode_Mode_Mode_MIN = MotionSetMode_Mode_Off;
constexpr MotionSetMode_Mode MotionSetMode_Mode_Mode_MAX = MotionSetMode_Mode_Recording;
constexpr int MotionSetMode_Mode_Mode_ARRAYSIZE = MotionSetMode_Mode_Mode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MotionSetMode_Mode_descriptor();
template<typename T>
inline const std::string& MotionSetMode_Mode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MotionSetMode_Mode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MotionSetMode_Mode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MotionSetMode_Mode_descriptor(), enum_t_value);
}
inline bool MotionSetMode_Mode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MotionSetMode_Mode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MotionSetMode_Mode>(
    MotionSetMode_Mode_descriptor(), name, value);
}
// ===================================================================

class MotionSetMode final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:indiemotion.messages.MotionSetMode) */ {
 public:
  inline MotionSetMode() : MotionSetMode(nullptr) {}
  ~MotionSetMode() override;
  explicit constexpr MotionSetMode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MotionSetMode(const MotionSetMode& from);
  MotionSetMode(MotionSetMode&& from) noexcept
    : MotionSetMode() {
    *this = ::std::move(from);
  }

  inline MotionSetMode& operator=(const MotionSetMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotionSetMode& operator=(MotionSetMode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotionSetMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const MotionSetMode* internal_default_instance() {
    return reinterpret_cast<const MotionSetMode*>(
               &_MotionSetMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MotionSetMode& a, MotionSetMode& b) {
    a.Swap(&b);
  }
  inline void Swap(MotionSetMode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotionSetMode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotionSetMode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MotionSetMode>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MotionSetMode& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MotionSetMode& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotionSetMode* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "indiemotion.messages.MotionSetMode";
  }
  protected:
  explicit MotionSetMode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MotionSetMode_Mode Mode;
  static constexpr Mode Off =
    MotionSetMode_Mode_Off;
  static constexpr Mode Live =
    MotionSetMode_Mode_Live;
  static constexpr Mode Recording =
    MotionSetMode_Mode_Recording;
  static inline bool Mode_IsValid(int value) {
    return MotionSetMode_Mode_IsValid(value);
  }
  static constexpr Mode Mode_MIN =
    MotionSetMode_Mode_Mode_MIN;
  static constexpr Mode Mode_MAX =
    MotionSetMode_Mode_Mode_MAX;
  static constexpr int Mode_ARRAYSIZE =
    MotionSetMode_Mode_Mode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Mode_descriptor() {
    return MotionSetMode_Mode_descriptor();
  }
  template<typename T>
  static inline const std::string& Mode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Mode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Mode_Name.");
    return MotionSetMode_Mode_Name(enum_t_value);
  }
  static inline bool Mode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Mode* value) {
    return MotionSetMode_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kModeFieldNumber = 1,
  };
  // .indiemotion.messages.MotionSetMode.Mode mode = 1;
  void clear_mode();
  ::indiemotion::messages::MotionSetMode_Mode mode() const;
  void set_mode(::indiemotion::messages::MotionSetMode_Mode value);
  private:
  ::indiemotion::messages::MotionSetMode_Mode _internal_mode() const;
  void _internal_set_mode(::indiemotion::messages::MotionSetMode_Mode value);
  public:

  // @@protoc_insertion_point(class_scope:indiemotion.messages.MotionSetMode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int mode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_indiemotion_2dproto_2fmessages_2fmotion_5fmode_2eproto;
};
// -------------------------------------------------------------------

class MotionGetMode final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:indiemotion.messages.MotionGetMode) */ {
 public:
  inline MotionGetMode() : MotionGetMode(nullptr) {}
  explicit constexpr MotionGetMode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MotionGetMode(const MotionGetMode& from);
  MotionGetMode(MotionGetMode&& from) noexcept
    : MotionGetMode() {
    *this = ::std::move(from);
  }

  inline MotionGetMode& operator=(const MotionGetMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotionGetMode& operator=(MotionGetMode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotionGetMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const MotionGetMode* internal_default_instance() {
    return reinterpret_cast<const MotionGetMode*>(
               &_MotionGetMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MotionGetMode& a, MotionGetMode& b) {
    a.Swap(&b);
  }
  inline void Swap(MotionGetMode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotionGetMode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotionGetMode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MotionGetMode>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MotionGetMode& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MotionGetMode& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "indiemotion.messages.MotionGetMode";
  }
  protected:
  explicit MotionGetMode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:indiemotion.messages.MotionGetMode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_indiemotion_2dproto_2fmessages_2fmotion_5fmode_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MotionSetMode

// .indiemotion.messages.MotionSetMode.Mode mode = 1;
inline void MotionSetMode::clear_mode() {
  mode_ = 0;
}
inline ::indiemotion::messages::MotionSetMode_Mode MotionSetMode::_internal_mode() const {
  return static_cast< ::indiemotion::messages::MotionSetMode_Mode >(mode_);
}
inline ::indiemotion::messages::MotionSetMode_Mode MotionSetMode::mode() const {
  // @@protoc_insertion_point(field_get:indiemotion.messages.MotionSetMode.mode)
  return _internal_mode();
}
inline void MotionSetMode::_internal_set_mode(::indiemotion::messages::MotionSetMode_Mode value) {
  
  mode_ = value;
}
inline void MotionSetMode::set_mode(::indiemotion::messages::MotionSetMode_Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:indiemotion.messages.MotionSetMode.mode)
}

// -------------------------------------------------------------------

// MotionGetMode

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace indiemotion

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::indiemotion::messages::MotionSetMode_Mode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::indiemotion::messages::MotionSetMode_Mode>() {
  return ::indiemotion::messages::MotionSetMode_Mode_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_indiemotion_2dproto_2fmessages_2fmotion_5fmode_2eproto
